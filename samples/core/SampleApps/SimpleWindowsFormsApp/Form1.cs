using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;
using Microsoft.EntityFrameworkCore;

namespace SimpleWindowsFormsApp
{
    public partial class Form1 : Form
    {
        private ProductContext context;
        
        public Form1()
        {
            InitializeComponent();
        }

        protected override void OnLoad(EventArgs e)
        {
            base.OnLoad(e);
            
            context = new ProductContext();
            context.Database.EnsureCreated();

            // Call the Load method to get the data for the given DbSet from the database.
            // The data is materialized as entities.
            // The entities are managed by the DbContext instance.
            context.Categories.Load();

            // Bind the categoryBindingSource.DataSource to all the Unchanged, Modified and Added Category objects that
            // are currently tracked by the DbContext.
            // Note that we need to call ToBindingList() on the ObservableCollection<TEntity> returned by
            // the DbSet.Local property to get the BindingList<T>  in order to facilitate two-way binding in WinForms.
            categoryBindingSource.DataSource = context.Categories.Local.ToBindingList();
        }

        private void categoryBindingNavigatorSaveItem_Click(object sender, EventArgs e)
        {
            Validate();

            // Save the changes to the database.
            context.SaveChanges();

            // Refresh the controls to show the values         
            // that were generated by the database.
            categoryDataGridView.Refresh();
            productsDataGridView.Refresh();
        }

        protected override void OnClosing(CancelEventArgs e)
        {
            base.OnClosing(e);
            
            context.Dispose();
        }
    }
}
